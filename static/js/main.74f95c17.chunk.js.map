{"version":3,"sources":["components/user_component.jsx","components/user_generator_component.jsx","components/invite_user_component.jsx.jsx","App.js","serviceWorker.js","index.js"],"names":["User","this","props","name","email","pic","permission","id","onDelete","className","src","alt","onClick","React","Component","NewUser","getNewUser","e","fetch","then","response","json","data","results","first","toUpperCase","slice","last","picture","large","value","gettingUser","style","width","height","cursor","InviteUser","App","res","users","state","setState","deletingUser","filter","r","headers","heders","map","key","Table","responsive","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74f95c17.chunk.js","sourcesContent":["import React from 'react';\n\nclass User extends React.Component {\n  \n  render() { \n    const {name, email, pic, permission, id, onDelete} = this.props;\n    return (\n     \n  <tbody>\n    <tr>\n      <td className='user'><img src={pic} alt=\"user\"/>{name}</td>\n      <td>{email}</td>\n      <td>{permission}</td>\n      <td> <img className='deleteButton' onClick={() => onDelete(id)} src=\"https://resources-live.sketch.cloud/files/4eecee26-a507-4f96-910c-69bd3d38fd8a.png?Expires=1583715600&Signature=O2bcjmuLIHBr3BYbmNn0ujWeGyKZj18rPLiHiUkH8aiMb8LvtHYGLBoyZjkDYyysaY~OVccoU6ZdFRbSj58S72bEbh5y1cJkfmieSzYeHDsSuncaNnzSzrSHuXxW7FWNMkPUicTZuYH61GHPNjoze5e62BxUzmc7G~AcUFh7zU0_&Key-Pair-Id=APKAJOITMW3RWOLNNPYA\" alt=\"bin\"/></td>\n    </tr>\n  </tbody>\n\n\n      );\n    }\n  }\n  \n  export default User;\n\n","\nimport React from 'react';\n\nclass NewUser extends React.Component {\n\n    getNewUser = e => {\n      fetch('https://randomuser.me/api/')\n        .then(response => response.json())\n        .then(data => {\n        let firstName = data.results[0].name.first[0].toUpperCase() + data.results[0].name.first.slice(1);\n        let lastName = data.results[0].name.last[0].toUpperCase() + data.results[0].name.last.slice(1);\n        let name = firstName + ' ' + lastName;\n        let email = data.results[0].email;\n        let pic = data.results[0].picture.large;\n        let id = data.results[0].id.value;\n        let permission = 'Standard';\n        \n        this.props.gettingUser({name, email, pic, permission, id});\n        \n      }); \n    }\n    \n    render() {\n      return (\n\n        <div className='NewUserButton' onClick={this.getNewUser}>\n          <p>Members</p>\n          <img src=\"https://cdn4.iconfinder.com/data/icons/online-menu/64/plus_add_additional_circle-512.png\" style={{width: '40px', height: '40px', cursor:'pointer' }} alt=\"add icon\"/>\n        </div>\n\n\n      );\n    }\n  }\n\n  export default NewUser;\n\n\n","\nimport React from 'react';\n\nclass InviteUser extends React.Component {\n\n    getNewUser = e => {\n      fetch('https://randomuser.me/api/')\n        .then(response => response.json())\n        .then(data => {\n        let firstName = data.results[0].name.first[0].toUpperCase() + data.results[0].name.first.slice(1);\n        let lastName = data.results[0].name.last[0].toUpperCase() + data.results[0].name.last.slice(1);\n        let name = firstName + ' ' + lastName;\n        let email = data.results[0].email;\n        let pic = data.results[0].picture.large;\n        let id = data.results[0].id.value;\n        let permission = 'Standard';\n        \n        this.props.gettingUser({name, email, pic, permission, id});\n      }); \n    }\n\n    \n    render() {\n      return (\n\n        <div className='footer'>Your team has 5/6 active members.<span onClick={this.getNewUser}> <img src=\"https://resources-live.sketch.cloud/files/0b6212fa-1c1c-4d62-9725-167bd95d0110.png?Expires=1583715600&Signature=tCYF4cf-Jqg~4sc-jy~ywvfIp5AU1vCydLHW4z3OFVAGrTAQOZIqzYculX8rp7BQs-vC1hw8NSGXwE3BH4RML2V3yf9EfUtqxVVwAj-nc~ubuDOER9faN3AOuo3HXjaYbYYWeQqlVH2lBchxFXibA0grcPjcGyATsUK4~lriMxs_&Key-Pair-Id=APKAJOITMW3RWOLNNPYA\" alt=\"add user icon\"/> INVITE</span>\n        </div>\n\n\n      );\n    }\n  }\n\n  export default InviteUser;\n\n\n","import React from 'react';\nimport User from './components/user_component';\nimport NewUser from './components/user_generator_component';\nimport InviteUser from './components/invite_user_component.jsx';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Table } from 'react-bootstrap';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [\n        {\n          id:1,\n          name: 'Erica Badu',\n          email: 'e.badu@example.com',\n          pic: 'https://resources-live.sketch.cloud/files/b3c4ce17-1f56-4d99-8309-bcb35becd425.png?Expires=1583715600&Signature=YAJ9yzzti5gFRLCTyBRN3Z5m~QXsU5BvxCi7LVYUqBYFxkbCRsstzIHLpQ-TUwH3qxfoHpT8a7I~qkuJLvQ9g5GtwjrkfJhZBbMArFzHV6mXuAjo7ihO~tJwmHGSVtQVMFnsXQKh-QPPe1ef172~aDE9mnHRhCc2oW1~2lNEIQU_&Key-Pair-Id=APKAJOITMW3RWOLNNPYA',\n          permission: 'Owner'\n        },\n        {\n          id:2,\n          name: 'Pat Nelson',\n          email: 'p.nelson@example.com',\n          pic: 'https://resources-live.sketch.cloud/files/8a54dba0-ea2f-4785-9f66-b02387e52756.png?Expires=1583715600&Signature=PpokO2T7Wwf5-MMjQ5DGthikMVSL2PmHEYL6PCHlkRNAR7EpkGkrzKam-GiF45OLgGzpXr5yQDUaQ2H~VAPgcY7Zqu7UfTAmt4evY~7peP0K3vmIJq9xiLuwTaAhDNxhMznE-hgEu~Aab6rahIavpvtLgEaCAjVonIvkEeIUbR4_&Key-Pair-Id=APKAJOITMW3RWOLNNPYA',\n          permission: 'Admin'\n        },        \n        {\n          id:3,\n          name: 'Pending acceptance',\n          email: 'j.dog@example.com',\n          pic: 'https://resources-live.sketch.cloud/files/2924ab65-57eb-4f08-96d2-d076b2e66325.png?Expires=1583715600&Signature=UoCCt2t6GXPedHMqedNm6jWQax2Gc2BO2CruqF6JCefzlgILwyDzw2Jq015blCO0QzNG1F8MtS2M3zLNMGbzSoID4D7Pd0hjLq77GDpCuD2FmBv2q35vaGL236hHOdY7WDXi~p9Z7rwPR9WhwMkgWRxStaJOxs9QEZQdZct-nIo_&Key-Pair-Id=APKAJOITMW3RWOLNNPYA',\n          permission: 'Standard'\n        },\n        { id:4,\n          name: 'Amy Namy',\n          email: 'a.namy@example.com',\n          pic: 'https://resources-live.sketch.cloud/files/d192a5b0-67fe-4d59-bdcb-0d0edae927e5.png?Expires=1583715600&Signature=oLq38451GhWK9E-40HcR3YBZK~-U4D4RddxSrme7aWGUK6g3lT675PKRgkihK6lsQVbNw8SEXd-KpWjy8q2sk5oKnhursFC2DX7~JkxF4DUBZniT3FXadxjyH44k-86zD-5bft-HCSF5JiGT1vDS7yUeIcbKykCrTXTZT7sMt6I_&Key-Pair-Id=APKAJOITMW3RWOLNNPYA',\n          permission: 'Standard'\n        },    \n        { id:5,\n          name: 'Victor D',\n          email: 'o.hunter@example.com',\n          pic: 'https://resources-live.sketch.cloud/files/38a487a0-135d-4c6b-b0df-c2a77a3ecbd5.png?Expires=1583715600&Signature=AunSS7M8fHFoi95XvNzNCEIzEGzky5aN4BAaoiornjIGjyoLPCp2Ev5iefR4S3HVCcWOkiJNJKzPc6gDGuuClElPguCKcjeQ-MQCgtF6F-brVeqxzoAIf0fe2rmT2mvBSOKoor-kMVtnFFsz5rSQ6OdVYYLzaenQi-e8bL~~O8U_&Key-Pair-Id=APKAJOITMW3RWOLNNPYA',\n          permission: 'Standard'\n        },\n        { id:6,\n          name: 'Olly',\n          email: 'v.d@example.com',\n          pic: 'https://resources-live.sketch.cloud/files/745ee5b3-0a15-4585-a9a0-fb04f743ebdb.png?Expires=1583715600&Signature=rH5ibnUq28gh2VBLLjtNOhZyEFcF-koVj23NYOU5enmi0uSZsmpFd0gJ8CeS~iPkw~vgT4UL1CeCBg28iFfGHaGvZ8qu2J38XVnTzoHoOJ9WaVkepYPvW-sovELP1pugPu~j5VFstGCZP91wPc4cfyEex3DGtsPKfNwPXZo6dT4_&Key-Pair-Id=APKAJOITMW3RWOLNNPYA',\n          permission: 'Standard'\n        }\n      ]\n    }\n  }\n  \n  displayHeaders() {\n    let headers = this.state.heders;\n    this.setState({headers});\n  }\n  \n  gettingUser  = res => {\n    let users = [...this.state.users, res];\n    this.setState({users});\n  }\n  \n  deletingUser = id => {\n    let users = this.state.users.filter(r => r.id !== id);\n    this.setState({users});\n  }\n  \n  render() {\n    let users = this.state.users.map((value) => (\n      <User key={value.id} onDelete={this.deletingUser} {...value} />\n      ));\n      return (\n        <div className='App container-fluid'>\n          <div className='container'><NewUser gettingUser={this.gettingUser} /></div>\n          <div className='table-wrapper container'>\n            <Table responsive className='table-borderless'>\n              <thead>\n                <tr>\n                  <th>Team member</th>\n                  <th>Email</th>\n                  <th>Permission status</th>\n                </tr>\n              </thead>\n              {users}\n            </Table>\n            <InviteUser gettingUser={this.gettingUser} />\n            \n            </div>\n        </div>\n        );\n      }\n    }\n    \n    export default App;\n\n    ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}